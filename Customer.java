/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// path - D:\SLIIT\IT-Project\Vehicle Sale Project\Project\VehicleSalesManagement\src\vehiclesalesmanagement
// Menik akka.
package vehiclesalesmanagement;

import java.sql.Connection;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.Year;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javafx.beans.binding.Bindings;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;
import net.connectcode.Code128Auto;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.exolab.castor.xml.validators.IntegerValidator;
import static vehiclesalesmanagement.Registerd_Vehicle.path;

/**
 *
 * @author Thiline Tissera
 */
public class Customer extends javax.swing.JPanel 
{
    private String text = null;
    private String gen = null;
    private String bar = "";
    private String did = "";
    public static  String cNic="";
    public static String gprice="";
    
    
    /**
     * Creates new form Customer
     */
    public Customer() 
    {
        initComponents();
        tableSearchCustomer();
        //tablesearch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nic_tf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pno_tf = new javax.swing.JTextField();
        mail_tf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        name_tf = new javax.swing.JTextField();
        addres_tf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        add_b = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        del_b = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        re_la = new javax.swing.JLabel();
        re_b = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        repo_b = new javax.swing.JButton();
        edit_b = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        search_tf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        details_cb = new javax.swing.JComboBox<>();
        barcodeS = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        demoB = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 204, 255), null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("NIC");

        nic_tf.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        nic_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nic_tfKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Phone Number");

        pno_tf.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N

        mail_tf.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Email");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Name");

        name_tf.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N

        addres_tf.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        addres_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addres_tfKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Address");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addres_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                        .addComponent(nic_tf)
                        .addComponent(pno_tf)
                        .addComponent(name_tf))
                    .addComponent(mail_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nic_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pno_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mail_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addres_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "CID", "Discount Type", "NIC", "Name", "Phone Number", "Email", "Address", "Gender", "DOB"
            }
        ));
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 255, 255), null));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add.png"))); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 40, 30));

        add_b.setText("Add Customer");
        add_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_bActionPerformed(evt);
            }
        });
        jPanel2.add(add_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 168, 47));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Trash.gif"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 30, 30));

        del_b.setText("Delete Customer");
        del_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_bActionPerformed(evt);
            }
        });
        jPanel2.add(del_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 135, 170, 50));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/arrow-repeat-once.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 30, 40));

        re_la.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Refresh.png"))); // NOI18N
        jPanel2.add(re_la, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 90, 40));

        re_b.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        re_b.setForeground(new java.awt.Color(0, 204, 204));
        re_b.setText("         Refresh");
        re_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                re_bActionPerformed(evt);
            }
        });
        jPanel2.add(re_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 170, 50));

        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printer_add.png"))); // NOI18N
        jPanel2.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 40, 30));

        repo_b.setLabel("Print Report");
        repo_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repo_bActionPerformed(evt);
            }
        });
        jPanel2.add(repo_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 170, 50));

        edit_b.setText("Update Customer");
        edit_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_bActionPerformed(evt);
            }
        });
        jPanel2.add(edit_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 168, 48));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 255), null));

        search_tf.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        search_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_tfActionPerformed(evt);
            }
        });
        search_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_tfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_tfKeyTyped(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier-left.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/magnifier-left.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Details");

        details_cb.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        details_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "All Data", "Deleted" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Search");

        demoB.setText("Demo");
        demoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(demoB)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(search_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(details_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(barcodeS, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(demoB)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(details_cb))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(barcodeS, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void add_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_bActionPerformed

        String nic = nic_tf.getText();
  
        if (validatetf()) 
        {
          try 
          {
                Database.setData("insert into discount (type,barcodeId,rate) values ('Normal' ,'" + nic + "' , '0' )");
                ResultSet rs = Database.getData("select d_id FROM discount WHERE barcodeId = '" + nic + "'");

                while (rs.next()) 
                {
                    did = rs.getString(1);
                }
            } 
          catch (Exception e) 
          {
                //System.out.println("Error 0"+e);
                JOptionPane.showMessageDialog(null, "Failed" + e);
          }

            try 
            {
                dobCalc();
                Database.setData("insert into customer (did,nic,phone,email, name, address,status,gender,dob) values ('" + did + "' ,'" + nic + "' , '" + pno_tf.getText() + "' , '" + mail_tf.getText() + "', '" + name_tf.getText() + "','" + addres_tf.getText() + "','Live','" + gen + "' ,'" + text + "')");

                JOptionPane.showMessageDialog(null, "Customer Successfully Added");

            } 
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(null, "Customer not added.");
            }
            
            refresh();

        }

    }//GEN-LAST:event_add_bActionPerformed

    private void del_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_bActionPerformed
      
        String status = " ";
   
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        int row = jTable1.getSelectedRow();
        if (row != -1) 
        {
            try 
            {
                
                ResultSet del = Database.getData("SELECT status FROM customer WHERE NIC = '" +jTable1.getValueAt(row, 3).toString()+ "'");

                while (del.next()) 
                {
                    status = del.getString(1); 
                }
            } 
            catch (Exception e) 
            {

                    JOptionPane.showMessageDialog(null, "Failed" + e);
            }
            
            if("Live".equals(status))
                {    
                    try 
                    {
                        int confirm = JOptionPane.showConfirmDialog(null, "Do you really want to delete?", "Delete", JOptionPane.YES_NO_OPTION);
                        if (confirm == 0) 
                        {

                            Database.setData("UPDATE customer set status = 'Deleted' where NIC ='" + jTable1.getValueAt(row, 3).toString() + "' ");
                            dtm.removeRow(row);
                            JOptionPane.showMessageDialog(null, "Deleted");
                        }

                    } 
                    catch (Exception e) 
                    {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e);
                    }
            }
                
            if("Deleted".equals(status))
                {    
                    try 
                    {
                        int confirm = JOptionPane.showConfirmDialog(null, "Do you really want to restore?", "Delete", JOptionPane.YES_NO_OPTION);
                        if (confirm == 0) 
                        {

                            Database.setData("UPDATE customer set status = 'Live' where NIC ='" + jTable1.getValueAt(row, 3).toString() + "' ");
                            dtm.removeRow(row);
                            JOptionPane.showMessageDialog(null, "Restored");
                        }

                    } 
                    catch (Exception e) 
                    {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e);
                    }
            }    
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please First Select Row From a Table");
        }
    }//GEN-LAST:event_del_bActionPerformed

    private void edit_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_bActionPerformed

        String nic = nic_tf.getText();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();

        if (validatetf()) {
            if (row != -1) {

                try {
                    int confirm = JOptionPane.showConfirmDialog(null, "Do you really want to update?", "Delete", JOptionPane.YES_NO_OPTION);
                    if (confirm == 0) {
                      
                        try 
                        {
                            dobCalc();

                            Database.setData("update customer set NIC='" + nic + "',phone='" + pno_tf.getText() + "',email='" + mail_tf.getText() + "',name='" + name_tf.getText() + "',address='" + addres_tf.getText() + "' ,gender = '" + gen + "' , dob = '" + text + "' where NIC ='" + jTable1.getValueAt(row, 3).toString() + "' ");
                                           
                            ResultSet d = Database.getData("SELECT did FROM customer WHERE NIC ='" + nic + "' ");

                            while (d.next()) 
                            {
                                did = d.getString(1);

                            }

                            System.out.println(" DID " + did);
                            Database.setData("update discount set barcodeId='" + nic + "' WHERE d_id = '" + did + "' ");
                                     
                            JOptionPane.showMessageDialog(null, "Customer Updated Succesfully");
                            refresh();
                        } 
                        catch (Exception e) 
                        {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(null, "Update Failed");
                        }

                    }

                } catch (Exception e) 
                {
                    e.printStackTrace();

                }

            } else 
            {
                JOptionPane.showMessageDialog(null, "Please First Select Updated Customer from table");
            }
        }
        
        
    }//GEN-LAST:event_edit_bActionPerformed
    private void tableSearchCustomer() 
    {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

        if (details_cb.getSelectedItem() == "All Data") 
        {
            try 
            {
               // ResultSet rs = Database.getData("select * from customer  WHERE status = 'Live' order by cid desc ");
               ResultSet rs = Database.getData("select c.cid, d.type, c.NIC, c.phone, c.email, c.name, c.date_time, c.address, c.gender, c.dob  from customer c, discount d WHERE c.status = 'Live' and c.did = d.d_id ");
               
                while (rs.next()) 
                {

                    Vector v = new Vector();

                    v.add(rs.getString(7));  //TB1 = DB7
                    v.add(rs.getString(1));  //TB2 = DB1 
                    v.add(rs.getString(2));  //TB3 = DB2
                    v.add(rs.getString(3));  //TB4 = DB3
                    v.add(rs.getString(6));  //TB5 = DB6
                    v.add(rs.getString(4));  //TB6 = DB4
                    v.add(rs.getString(5));  //TB7 = DB5
                    v.add(rs.getString(8));  //TB8 = DB8
                    v.add(rs.getString(9));  //TB9 = DB9
                    v.add(rs.getString(10)); //TB10 = DB10

                    dtm.addRow(v);

                }

            } 
            catch (Exception e) 
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }
           
        }

        if (details_cb.getSelectedItem() == "Deleted") 
        {
            try 
            {
                ResultSet rs = Database.getData("select c.cid, d.type, c.NIC, c.phone, c.email, c.name, c.date_time, c.address, c.gender, c.dob  from customer c, discount d WHERE c.status = 'Deleted' and c.did = d.d_id ");
                //ResultSet rs = Database.getData("select * from customer WHERE status = 'Deleted'");
                while (rs.next()) 
                {

                    Vector v = new Vector();

                    v.add(rs.getString(7));  //TB1 = DB7
                    v.add(rs.getString(1));  //TB2 = DB1 
                    v.add(rs.getString(2));  //TB3 = DB2
                    v.add(rs.getString(3));  //TB4 = DB3
                    v.add(rs.getString(6));  //TB5 = DB6
                    v.add(rs.getString(4));  //TB6 = DB4
                    v.add(rs.getString(5));  //TB7 = DB5
                    v.add(rs.getString(8));  //TB8 = DB8
                    v.add(rs.getString(9));  //TB9 = DB9
                    v.add(rs.getString(10)); //TB10 = DB10

                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }
            //tableSearchCustomer();
        }

        if (details_cb.getSelectedItem() == "Default") {
            try {
               //ResultSet rs = Database.getData("select * from customer WHERE status = 'Live' order by cid desc limit 5");
                ResultSet rs = Database.getData("select c.cid, d.type, c.NIC, c.phone, c.email, c.name, c.date_time, c.address, c.gender, c.dob  from customer c, discount d WHERE c.status = 'Live' and c.did = d.d_id order by c.cid desc limit 5");
                
                while (rs.next())
                {

                    Vector v = new Vector();

                    v.add(rs.getString(7));  //TB1 = DB7
                    v.add(rs.getString(1));  //TB2 = DB1 
                    v.add(rs.getString(2));  //TB3 = DB2
                    v.add(rs.getString(3));  //TB4 = DB3
                    v.add(rs.getString(6));  //TB5 = DB6
                    v.add(rs.getString(4));  //TB6 = DB4
                    v.add(rs.getString(5));  //TB7 = DB5
                    v.add(rs.getString(8));  //TB8 = DB8
                    v.add(rs.getString(9));  //TB9 = DB9
                    v.add(rs.getString(10)); //TB10 = DB10

                    dtm.addRow(v);

                }

            } catch (Exception e) 
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }

        }

    }

    private void search_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_tfActionPerformed

    }//GEN-LAST:event_search_tfActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        nic_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        pno_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        mail_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        name_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        addres_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void search_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_tfKeyReleased
       
        String search = search_tf.getText();
        
       
            //String search =search_tf.getText();
            if (search.equalsIgnoreCase("")) 
            {
                tableSearchCustomer();
            } 
            else 
            {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                try 
                {

                        ResultSet rs = Database.getData("SELECT * FROM customer WHERE name LIKE '%" + search + "%' "
                            + "OR NIC LIKE '"+search+"%' OR cid LIKE '"+search+"%' OR date_time LIKE '"+search+"%' ");
                    while (rs.next()) 
                    {

                        Vector v = new Vector();

                        v.add(rs.getString(7));  //TB1 = DB7
                        v.add(rs.getString(1));  //TB2 = DB1 
                        v.add(rs.getString(2));  //TB3 = DB2
                        v.add(rs.getString(3));  //TB4 = DB3
                        v.add(rs.getString(6));  //TB5 = DB6
                        v.add(rs.getString(4));  //TB6 = DB4
                        v.add(rs.getString(5));  //TB7 = DB5
                        v.add(rs.getString(8));  //TB8 = DB8
                        v.add(rs.getString(9));  //TB9 = DB9
                        v.add(rs.getString(10)); //TB10 = DB10

                        dtm.addRow(v);

                    }

                } 
                catch (Exception e)
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e);
                }
            }
    }//GEN-LAST:event_search_tfKeyReleased

    private void re_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_re_bActionPerformed
        //calcDiscount();
        refresh();
        
        /*
        // Code128Auto code128 = new Code128Auto();
         String barcode = code128.encode(nic_tf.getText());
         barcodeS.setText(barcode);
         barcodeS.setFont(new java.awt.Font("CCode128_s3_Trial",java.awt.Font.PLAIN, 24) ); */

    }//GEN-LAST:event_re_bActionPerformed
    
    public void refresh()
    {
        tableSearchCustomer();
        nic_tf.setText(null);
        pno_tf.setText(null);
        mail_tf.setText(null);
        name_tf.setText(null);
        addres_tf.setText(null);
        search_tf.setText(null);
        barcodeS.setText(null);

    }
    
    public void calcDiscount()
    {
        String nic = nic_tf.getText();
        String cus_id = "";
        String did = "";
        String tot = "";
        int sell = 0;

      
        // get cid, did from nic text field
        try 
        {
            ResultSet id = Database.getData("SELECT  cid, did  FROM customer WHERE NIC  = '" + nic + "' ");

            while (id.next()) 
            {
                cus_id = id.getString(1);   // assign cid to cus_id
                did = id.getString(2);
            }
           
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Query1 failed ");
        }

        // get total amount about that cid from sale table
        try 
        {

            ResultSet dis = Database.getData("SELECT SUM(selling_price) FROM  sale WHERE c_id  = '" + cus_id + "' ");
           // JOptionPane.showMessageDialog(null, "Query Success  " + cus_id + " - " + did);

            while (dis.next()) 
            {
                tot = dis.getString(1); // assign sum value to tot.
            }

        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Query2 failed ");
        }

       // System.out.println("tot : " + tot);
        sell = Integer.parseInt(tot);
        // JOptionPane.showMessageDialog(null, "Sell: " +sell);

        // Calculate discount & update discount table
        if (1 <sell  && sell < 100000) // 100 000
        {
            try
            {
         //       JOptionPane.showMessageDialog(null, "AMOUNT IS : " + tot);
                Database.setData("update discount set type = 'Normal' ,barcodeId='" + nic + "',rate='0' WHERE d_id = '" + did + "'");

            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }

        } 
        else if (100000 < sell && sell < 200000) 
        {
            try
            {
           //     JOptionPane.showMessageDialog(null, "AMOUNT IS : " + tot);
                Database.setData("update discount set type = 'Platinum' ,barcodeId='" + nic + "',rate='5' WHERE d_id = '" + did + "'");

            }
            catch (Exception e) 
            {
                e.printStackTrace();
            }

        } 
        else if (200000 < sell && sell < 300000) 
        {
            try 
            {
             //   JOptionPane.showMessageDialog(null, "AMOUNT IS : " + tot);
                Database.setData("update discount set type = 'Silver' ,barcodeId='" + nic + "',rate='6' WHERE d_id = '" + did + "'");

            } catch (Exception e) 
            {
                e.printStackTrace();
            }

        } 
        else if (300000 < sell && sell < 500000) 
        {
            try 
            {
               // JOptionPane.showMessageDialog(null, "AMOUNT IS : " + tot);
                Database.setData("update discount set type = 'Gold' ,barcodeId='" + nic + "',rate='10' WHERE d_id = '" + did + "'");

            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }

        } 
        else if (500000 < sell) 
        {
            try
            {
                //JOptionPane.showMessageDialog(null, "AMOUNT IS : " + tot);
                Database.setData("update discount set type = 'Platinum' ,barcodeId='" + nic + "',rate='12' WHERE d_id = '" + did + "'");

            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }
        }
        
    }
//--------------------------------------------------------------------------------------------------       

    public boolean validatetf() 
    {
        String nic = nic_tf.getText();
        String exist = "";
        
        try
        {
                //System.out.println(" " + nic);
                ResultSet ex = Database.getData("SELECT cid FROM customer WHERE NIC = '" + nic + "' GROUP BY NIC HAVING COUNT(*) > '1'");

                while (ex.next())
                {
                    exist = ex.getString(1);
                    //JOptionPane.showMessageDialog(null, "STATUS" +  status);
                    // System.out.println(" " + status);
                }
            } 
        catch (Exception e) 
        {
                
            JOptionPane.showMessageDialog(null, "Failed" + e);
        }
        
        String name_val = "[a-z A-Z]+\\.?"; // name
        String phone_val = "^[0-9]{10}$";
        String address_val = "[a-z A-Z 0-9 , / ]+\\.?";   // Address

        //phone validate
        Pattern p_phone = Pattern.compile(phone_val); // start , combination , total num
        Matcher p = p_phone.matcher(pno_tf.getText());

        //name validate
        Pattern p_name = Pattern.compile(name_val, Pattern.CASE_INSENSITIVE);
        Matcher n = p_name.matcher(name_tf.getText());

        // address validate
        Pattern p_address = Pattern.compile(address_val, Pattern.CASE_INSENSITIVE);
        Matcher a = p_address.matcher(addres_tf.getText());
        
        
        if (nic_tf.getText().equalsIgnoreCase("")) 
        {
            JOptionPane.showMessageDialog(null, "Enter NIC ");
            return false;
        } 
         else if (exist != "") 
        {
            JOptionPane.showMessageDialog(null, "All ready exsist ");
            return false;
        }
        else if (mail_tf.getText().equalsIgnoreCase("")) 
        {
            JOptionPane.showMessageDialog(null, "Enter Email ");
            return false;
        } 
        else if (pno_tf.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Enter phone number");
            return false;
        } 
        else if (name_tf.getText().equalsIgnoreCase("")) 
        {
            JOptionPane.showMessageDialog(null, "Enter name ");
            return false;
        } else if (addres_tf.getText().equalsIgnoreCase("")) 
        {
            JOptionPane.showMessageDialog(null, "Enter Address ");
            return false;
        } //-----------------------------------------
        
        else 
        {
            try 
            {
                InternetAddress emailAdd = new InternetAddress(mail_tf.getText());
                emailAdd.validate();

            }
            catch (AddressException ex)
            {
                JOptionPane.showMessageDialog(null, "Enter valid email ");
                return false;
            }

            if (nic.length() == 10)
            {
                try 
                {
                    int l = Integer.valueOf(nic.substring(0, 9));
                    System.out.println(l);
                } 
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(null, "Enter Valid NIC");
                    return false;
                }

                if (nic.charAt(9) == 'V' || nic.charAt(9) == 'v' || nic.charAt(9) == 'x' || nic.charAt(9) == 'X') 
                {
                  //  System.out.println(nic.charAt(9));
                } else
                {
                    JOptionPane.showMessageDialog(null, "Enter Valid Charactor ");
                    return false;
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Invalid NIC ");
                return false;
            }

            if (p.matches()) 
            {
                //return true;
            } else 
            {
                JOptionPane.showMessageDialog(null, "Phone number invalid ");
                return false;
            }

            if (n.matches()) 
            {
                //return true;
            } else 
            {
                JOptionPane.showMessageDialog(null, "Name invalid ");
                return false;
            }

            if (a.matches()) 
            {
               // return true;
            } 
            else 
            {
                JOptionPane.showMessageDialog(null, "Address invalid ");
                return false;
            }
            return true;
        }
    }

   public void barcode()
   {
        Code128Auto code128 = new Code128Auto();
        String barcode = code128.encode(nic_tf.getText());
        barcodeS.setText(barcode);
        barcodeS.setFont(new java.awt.Font("CCode128_s3_Trial", java.awt.Font.PLAIN, 24));
        //calcDiscount();
        
   }
   public void dobCalc() 
   {

        String nic = nic_tf.getText();
        String ID = String.valueOf(nic.charAt(0) + String.valueOf(nic.charAt(1)));
        int Byear = Integer.valueOf(ID);

        if (Byear > 50) 
        {
            ID = "19" + ID;

        } else 
        {
            ID = "20" + ID;
        }

        String dob = String.valueOf(nic.charAt(2)) + String.valueOf(nic.charAt(3)) + String.valueOf(nic.charAt(4));
        int day = Integer.valueOf(dob);

        gen = "";
        if (day > 500) 
        {
            gen = "Female";
            day -= 500;
        } else 
        {
            gen = "Male";
        }

        int year = Integer.valueOf(ID);
        if (0 != year % 4) 
        {
            if (day > 59) 
            {
                day--;
            }
        }

        LocalDate d = Year.of(year).atDay(day);
        DateTimeFormatter form = DateTimeFormatter.ofPattern("yyyy-MMM-dd");
        text = d.format(form);
        //System.out.println("Date of birth : "+ text + "Gender : "+ gen);

    }
   
   public String getNic()
   {
       String nic = nic_tf.getText();
       
       return nic;
   }
   
    private void repo_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repo_bActionPerformed
        //System.out.println(jTable1.getSelectedRow());
        if (jTable1.getSelectedRow() == -1) 
        {
            try 
            {
                // int row = jTable1.getSelectedRow();
                JFrame re = new JFrame("Report");
                Connection db = Database.getConnection();
                Map par = new HashMap();
                par.put(null, null);
                JRViewer vi = null;

                JasperPrint p = JasperFillManager.fillReport("C:\\Users\\it17153232\\Desktop\\Vehicle Sale Project\\Project\\VehicleSalesManagement\\src\\Reports\\allCoustormer.jasper", par, db);
                vi = new JRViewer(p);
                vi.setVisible(true);
                re.setSize(1000, 700);
                re.add(vi);
                re.setVisible(true);
                // System.out.println("a");
            }
            catch (Exception e) 
            {
                e.printStackTrace();
            }
        } 
        else 
        {   
            
            int row = jTable1.getSelectedRow();
            cNic=jTable1.getValueAt(row, 3).toString();
            new ReportGen().setVisible(true);
            
            barcode();
            calcDiscount();
           
        }
       
    }//GEN-LAST:event_repo_bActionPerformed

    private void search_tfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_tfKeyTyped
        // tableSearchCustomerUseNic();
    }//GEN-LAST:event_search_tfKeyTyped

    private void addres_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addres_tfKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_addres_tfKeyReleased

    private void nic_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nic_tfKeyReleased
    
    }//GEN-LAST:event_nic_tfKeyReleased

    private void demoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoBActionPerformed
        nic_tf.setText("601831471V");
        pno_tf.setText("0703500924");
        mail_tf.setText("kanthi@gmail.com");
        name_tf.setText("Kanthi Gunawardana");
        addres_tf.setText("Metiyagane");
       
    }//GEN-LAST:event_demoBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_b;
    private javax.swing.JTextField addres_tf;
    private javax.swing.JLabel barcodeS;
    private javax.swing.JButton del_b;
    private javax.swing.JButton demoB;
    private javax.swing.JComboBox<String> details_cb;
    private javax.swing.JButton edit_b;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mail_tf;
    private javax.swing.JTextField name_tf;
    private javax.swing.JTextField nic_tf;
    private javax.swing.JTextField pno_tf;
    private javax.swing.JButton re_b;
    private javax.swing.JLabel re_la;
    private javax.swing.JButton repo_b;
    private javax.swing.JTextField search_tf;
    // End of variables declaration//GEN-END:variables
}
