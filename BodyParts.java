/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vehiclesalesmanagement;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author it17153232
 */
public class BodyParts extends javax.swing.JPanel {

    /**
     * Creates new form BodyParts
     */
    public BodyParts() {
        initComponents();
        brandload();
        loadType();
       
        typecombo();
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField9 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        costPrice = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        jComboBox9 = new javax.swing.JComboBox<>();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 204), null));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Select Type");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Brand Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 55, -1, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Rim Material");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 75, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Colour");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 75, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Size");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 75, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Quantity");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 75, 40));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select type" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 150, 40));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Brand" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 150, 40));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 160, 150, 40));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 210, 150, 40));

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 187, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Price");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 60, 40));

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 187, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Amperage");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 90, 40));

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 260, 150, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Hertz (Hz)");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, 40));

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 310, 150, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Model Number");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 110, 40));

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField8KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 187, 40));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_item.png"))); // NOI18N
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 64, 40, 30));

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 50, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Model");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 70, 40));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_item.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 40, 40));

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 50, 40));

        jComboBox3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Model" }));
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 150, 40));

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 360, 150, 40));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Description");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 70, 40));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 500, 80));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Cost Price");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 80, 40));

        costPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        costPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costPriceActionPerformed(evt);
            }
        });
        costPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                costPriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                costPriceKeyReleased(evt);
            }
        });
        jPanel1.add(costPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 310, 40));

        jComboBox5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Color", "White", "Black", "Dark Yellow", "Lemon", "Beige", "Brown", "Cherry Red", "Cranberry", "Pink", "Orange", "Purple", "Sapphir blue", "Vivid blue", "kelly green", "Gold", "Silver" }));
        jPanel1.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 150, 40));

        jComboBox6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Size", "14 x 7", "15 x 7", "16 x 7", "16 x 8", "17 x 7", "17 x 8", "18 x 8" }));
        jPanel1.add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 150, 40));

        jComboBox7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Amperage", "65 - 80", "90 - 110", "135 - 160", "160 - 210 " }));
        jPanel1.add(jComboBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 150, 40));

        jComboBox8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Hertz", "165 - 235", "120 - 175", "100 - 145", "85 - 125", "75 - 110", "65 - 95", "55 - 75" }));
        jPanel1.add(jComboBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 150, 40));

        jComboBox9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Rim Material", "Aluminium", "Brass", "Gold", "Iron / steel", "Nickel", "Pewter", "Platinum", "Silver" }));
        jPanel1.add(jComboBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 150, 40));

        jTextField11.setEditable(false);
        jTextField11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 10, 150, 40));

        jTextField12.setEditable(false);
        jTextField12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 60, 150, 40));

        jTextField13.setEditable(false);
        jTextField13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 110, 150, 40));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Trash.gif"))); // NOI18N
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 260, 40, 40));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add.png"))); // NOI18N
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 270, 40, 30));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/arrow-repeat-once.png"))); // NOI18N
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, 30, 40));

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Add Part");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, 170, 80));

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Delete Part");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 240, 170, 80));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Update Part");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 170, 80));

        jComboBox4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type" }));
        jComboBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox4MouseClicked(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 380, 200, 40));

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 380, 370, 39));

        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, 580, 130));

        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 620, 250));

        jButton6.setText("DEMO ACCE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 70, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 1120, 470));

        jTable2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Brand", "Model", "Model Number", "Colour", "Quantity", "Price", "RimMaterial", "Size", "Amphere", "Hertz", "Description", "Cost Price"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 1110, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new BodyParts_brand().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new BodyParts_model().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jComboBox3.removeAllItems();
        String s = null;
        try {

            ResultSet rs1 = Database.getData("select bid from bodypartbrand where brandName='" + jComboBox2.getSelectedItem() + "'");

            //System.out.println(s);
            if (rs1.next()) {

                s = rs1.getString("bid");
                //System.out.println(s);

            }

            ResultSet rs = Database.getData("select m.mName from bodypartbrand b,bodymodel m where m.bid='" + s + "' group by m.bid,m.mName");

            while (rs.next()) {

                jComboBox3.addItem(rs.getString("m.mName"));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String bidNumber = null;
        String modNum = jTextField8.getText();

        if (jComboBox1.getSelectedItem().equals("AlloyWheel")) {
            if (jComboBox6.getSelectedItem().toString().equalsIgnoreCase("Select Size")) {

                JOptionPane.showMessageDialog(null, "please select Size!");

            } else if (jComboBox9.getSelectedItem().toString().equalsIgnoreCase("Select Rim Material")) {
                JOptionPane.showMessageDialog(null, "please select Rim Material!");
            } else {
                try {

                    ResultSet modN_rs = Database.getData("select * from body_parts where modeNum = '" + modNum + "'");

                    if (modN_rs.next()) {
                        JOptionPane.showMessageDialog(null, "Allow Update Only! Item is exist!");
                    } else {

                        Database.setData("insert into body_parts(brand,modeNum,colour,model,quantity,price,cost_price) values('" + jComboBox2.getSelectedItem() + "','" + jTextField8.getText() + "','" + jComboBox5.getSelectedItem() + "','" + jComboBox3.getSelectedItem() + "','" + jTextField4.getText() + "','" + jTextField5.getText() + "','" + costPrice.getText() + "')");
                        ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                        if (bid_rs.next()) {
                            bidNumber = bid_rs.getString(1);

                        } else {
                            JOptionPane.showMessageDialog(null, "no match found!");
                        }

                        Database.setData("insert into alloywheel(bid,size,rimMaterial) values('" + bidNumber + "','" + jComboBox6.getSelectedItem() + "','" + jComboBox9.getSelectedItem() + "')");
                        JOptionPane.showMessageDialog(null, "AlloyWheel inserted successfull");

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

        } else if (jComboBox1.getSelectedItem().equals("Multimedia")) {
            jTextField7.setEnabled(false);

            if (jComboBox7.getSelectedItem().toString().equalsIgnoreCase("Select Amperage")) {

                JOptionPane.showMessageDialog(null, "please select Amperage!");
            } else if (jComboBox8.getSelectedItem().toString().equalsIgnoreCase("Select Hertz")) {

                JOptionPane.showMessageDialog(null, "please select Hertz!");

            } else {

                try {
                    ResultSet modN_rs = Database.getData("select * from body_parts where modeNum = '" + modNum + "'");

                    if (modN_rs.next()) {
                        JOptionPane.showMessageDialog(null, "Allow Update Only! Item is exist!");
                    } else {

                        Database.setData("insert into body_parts(brand,modeNum,colour,model,quantity,price,cost_price) values('" + jComboBox2.getSelectedItem() + "','" + jTextField8.getText() + "','" + jComboBox5.getSelectedItem() + "','" + jComboBox3.getSelectedItem() + "','" + jTextField4.getText() + "','" + jTextField5.getText() + "','" + costPrice.getText() + "')");
                        ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                        if (bid_rs.next()) {
                            bidNumber = bid_rs.getString(1);

                        } else {
                            JOptionPane.showMessageDialog(null, "no match found!");
                        }

                        Database.setData("insert into multimedia(bid,amphere,hrtz) values('" + bidNumber + "','" + jComboBox7.getSelectedItem() + "','" + jComboBox8.getSelectedItem() + "')");
                        JOptionPane.showMessageDialog(null, "Multimedia inserted successfull");

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        } else if (jComboBox1.getSelectedItem().equals("Accessories")) {

            try {
                ResultSet modN_rs = Database.getData("select * from body_parts where modeNum = '" + modNum + "'");

                if (modN_rs.next()) {
                    JOptionPane.showMessageDialog(null, "Allow Update Only! Item is exist!");
                } else {
                    Database.setData("insert into body_parts(brand,modeNum,colour,model,quantity,price,cost_price) values('" + jComboBox2.getSelectedItem() + "','" + jTextField8.getText() + "','" + jComboBox5.getSelectedItem() + "','" + jComboBox3.getSelectedItem() + "','" + jTextField4.getText() + "','" + jTextField5.getText() + "','" + costPrice.getText() + "')");
                    ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                    if (bid_rs.next()) {
                        bidNumber = bid_rs.getString(1);

                    } else {
                        JOptionPane.showMessageDialog(null, "no match found!");
                    }

                    Database.setData("insert into accessrices(bid,discript) values('" + bidNumber + "','" + jTextArea1.getText() + "')");
                    JOptionPane.showMessageDialog(null, "Aceessories inserted successfull");

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Select the Type");
        }

        SetEmpty();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked

    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        
        jComboBox2.removeAllItems();
        try {
            ResultSet rsb = Database.getData("select brandName from bodypartbrand where status='" + jComboBox1.getSelectedItem() + "'");
            while (rsb.next()) {

                jComboBox2.addItem(rsb.getString("brandName"));

            }

        } catch (Exception e) {
        }

        if (jComboBox1.getSelectedItem() == "AlloyWheel") {

            jComboBox6.setEnabled(true);
            jComboBox9.setEnabled(true);
            
            
            
            jTextField6.setEnabled(false);
            jTextField7.setEnabled(false);
            jTextArea1.setEnabled(false);
            
         //   jComboBox5.setEnabled(false);
            jComboBox7.setEnabled(false);
            jComboBox8.setEnabled(false);
            
            
            
            

            jTextField6.setText("");
            jTextField7.setText("");
            jTextArea1.setText("");

            jTextField3.setEnabled(true);
            jTextField9.setEnabled(true);
        } else if (jComboBox1.getSelectedItem() == "Multimedia") {

            jComboBox7.setEnabled(true);
            jComboBox8.setEnabled(true);
            
            
        //    jComboBox5.setEnabled(false);
            jComboBox6.setEnabled(false);
            jComboBox9.setEnabled(false);
            
            jTextField3.setEnabled(false);
            jTextField9.setEnabled(false);
            jTextArea1.setEnabled(false);

            jTextField3.setText("");
            jTextField9.setText("");
            jTextArea1.setText("");

            jTextField6.setEnabled(true);
            jTextField7.setEnabled(true);

        } else if (jComboBox1.getSelectedItem() == "Accessories") {
            
            
            jComboBox7.setEnabled(false);
            jComboBox8.setEnabled(false);
            
            
         //   jComboBox5.setEnabled(false);
            jComboBox6.setEnabled(false);
            jComboBox9.setEnabled(false);

            jTextField3.setEnabled(false);
            jTextField9.setEnabled(false);
            jTextField6.setEnabled(false);
            jTextField7.setEnabled(false);
            jTextArea1.setEnabled(true);

            jTextField3.setText("");
            jTextField9.setText("");
            jTextField6.setText("");
            jTextField7.setText("");

        }


    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        
        if(jComboBox4.getSelectedItem().toString().equalsIgnoreCase("Select Type")){
            jTextField1.setEnabled(false);
                    
    }else{
        jTextField1.setEnabled(true);
        }

    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String type = null;
        String modelNo = null;
        int bid = 0;
        if (jTextField8.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "please select row from table!");
        } else {
            try {
                type = jTextField11.getText();
                modelNo = jTextField8.getText();
                ResultSet a_rs = Database.getData("select bid from body_parts where modeNum ='" + modelNo + "'");
                if (a_rs.next()) {
                    bid = a_rs.getInt(1);

                }

                if (type.equalsIgnoreCase("AlloyWheel")) {

                    Database.setData("insert into remove_bodyparts(brand,modeNum,model,status,price,size,rimMaterial,discript,amphere,hrtz,cost_price) values ('" + jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString() + "','AlloyWheel','" + jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 8).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 7).toString() + "','null','null','null','" + jTable2.getValueAt(jTable2.getSelectedRow(), 12).toString() + "')");

                    Database.setData("delete from alloywheel where bid='" + bid + "'");
                    Database.setData("delete from body_parts where bid='" + bid + "'");
                    JOptionPane.showMessageDialog(null, "body part is deleted");
                } else if (type.equalsIgnoreCase("Accessories")) {
                    Database.setData("insert into remove_bodyparts(brand,modeNum,model,status,price,size,rimMaterial,discript,amphere,hrtz,cost_price) values ('" + jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString() + "','Accessories','" + jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString() + "','null','null','" + jTable2.getValueAt(jTable2.getSelectedRow(), 11).toString() + "','null','null','" + jTable2.getValueAt(jTable2.getSelectedRow(), 12).toString() + "')");

                    Database.setData("delete from accessrices where bid='" + bid + "'");
                    Database.setData("delete from body_parts where bid='" + bid + "'");
                    JOptionPane.showMessageDialog(null, "accessrices is deleted");
                } else if (type.equalsIgnoreCase("Multimedia")) {
                    Database.setData("insert into remove_bodyparts(brand,modeNum,model,status,price,size,rimMaterial,discript,amphere,hrtz,cost_price) values ('" + jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString() + "','Multimedia','" + jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString() + "','null','null','null','" + jTable2.getValueAt(jTable2.getSelectedRow(), 9).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 10).toString() + "','" + jTable2.getValueAt(jTable2.getSelectedRow(), 12).toString() + "')");

                    Database.setData("delete from multimedia where bid='" + bid + "'");
                    Database.setData("delete from body_parts where bid='" + bid + "'");
                    JOptionPane.showMessageDialog(null, "multimedia is deleted");
                } else {
                    JOptionPane.showMessageDialog(null, "please select row of table!");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String aBid = null;
        if (jComboBox2.getSelectedItem().equals("Select Brand")) {
            JOptionPane.showMessageDialog(null, "pleace select the brand!");
        } else if (jComboBox3.getSelectedItem().equals("Select Model")) {
            JOptionPane.showMessageDialog(null, "pleace select the model!");
        } else if (jComboBox5.getSelectedItem().equals("Select Color")) {
            JOptionPane.showMessageDialog(null, "pleace select the Color!");
        } else if (jComboBox1.getSelectedItem().equals("AlloyWheel")) {

            if (jComboBox6.getSelectedItem().equals("Select Size")) {
                JOptionPane.showMessageDialog(null, "pleace select the Size!");
            } else if (jComboBox9.getSelectedItem().equals("Select Rim Material")) {

                JOptionPane.showMessageDialog(null, "pleace select the Material!");
            } else {

                try {

                    ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                    if (bid_rs.next()) {
                        aBid = bid_rs.getString(1);

                        Database.setData("update body_parts set brand='" + jComboBox2.getSelectedItem() + "',modeNum='" + jTextField8.getText() + "',colour='" + jComboBox5.getSelectedItem() + "',model='" + jComboBox3.getSelectedItem() + "',quantity='" + jTextField4.getText() + "',price='" + jTextField5.getText() + "',cost_price='"+costPrice.getText()+"' where bid='" + aBid + "'");
                        Database.setData("update alloywheel set size='" + jComboBox6.getSelectedItem() + "',rimMaterial='" + jComboBox9.getSelectedItem() + "' where bid='" + aBid + "'");
                        JOptionPane.showMessageDialog(null, "update is succeed");
                    } else {
                        JOptionPane.showMessageDialog(null, "no match found and select from table  record!");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        } else if (jComboBox1.getSelectedItem().equals("Multimedia")) {

            if(jComboBox7.getSelectedItem().equals("Select Amperage")){
            JOptionPane.showMessageDialog(null, "pleace select the Amperage!");
            }else if(jComboBox8.getSelectedItem().equals("Select Hertz")){
            JOptionPane.showMessageDialog(null, "pleace select the Hertz!");
            }else{
            
                try {
                ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                if (bid_rs.next()) {
                    aBid = bid_rs.getString(1);

                    Database.setData("update body_parts set brand='" + jComboBox2.getSelectedItem() + "',modeNum='" + jTextField8.getText() + "',colour='" +jComboBox5.getSelectedItem() + "',model='" + jComboBox3.getSelectedItem() + "',quantity='" + jTextField4.getText() + "',price='" + jTextField5.getText() + "',cost_price='"+costPrice.getText()+"' where bid='" + aBid + "'");
                    Database.setData("update multimedia set amphere='" + jComboBox7.getSelectedItem() + "',hrtz='" + jComboBox8.getSelectedItem() + "' where bid='" + aBid + "'");
                    JOptionPane.showMessageDialog(null, "update is succeed");
                } else {
                    JOptionPane.showMessageDialog(null, "no match found and select from table  record!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            }
            
        } else if (jComboBox1.getSelectedItem().equals("Accessories")) {
            
            
            
            try {
                ResultSet bid_rs = Database.getData("select * from body_parts where modeNum='" + jTextField8.getText() + "'");
                if (bid_rs.next()) {
                    aBid = bid_rs.getString(1);

                    Database.setData("update body_parts set brand='" + jComboBox2.getSelectedItem() + "',modeNum='" + jTextField8.getText() + "',colour='" + jComboBox5.getSelectedItem() + "',model='" + jComboBox3.getSelectedItem() + "',quantity='" + jTextField4.getText() + "',price='" + jTextField5.getText() + "',cost_price='"+costPrice.getText()+"' where bid='" + aBid + "'");
                    Database.setData("update accessrices set discript='" + jTextArea1.getText() + "' where bid='" + aBid + "'");
                    JOptionPane.showMessageDialog(null, "update is succeed");
                } else {
                    JOptionPane.showMessageDialog(null, "no match found and select from table  record!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select the type!");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox4MouseClicked


    }//GEN-LAST:event_jComboBox4MouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
       if(simbleValidation(jTextField1.getText())==false){
        
            JOptionPane.showMessageDialog(null, "Invalide Input!");
        }
        
        
        /*
        if (jComboBox4.getSelectedItem().equals("AlloyWheel")) {
            
           DefaultTableModel dtm_b = (DefaultTableModel)  jTable1.getModel();
           dtm_b.setRowCount(0);
           try {
           
            ResultSet a_rs = Database.getData("select * from body_parts b,alloywheel a where brand like '"+jTextField1.getText()+"%"+"' and a.bid = b.bid");
            while (a_rs.next()) {

                Vector va = new Vector();
                va.add(a_rs.getString(2));
                va.add(a_rs.getString(3));
                va.add(a_rs.getString(4));
                va.add(a_rs.getString(5));
                va.add(a_rs.getString(6));
                va.add(a_rs.getString(10));
                va.add(a_rs.getString(7));
                va.add(a_rs.getString(11));
                
                dtm_b.addRow(va);
            }
                
            } catch (Exception e) {
            e.printStackTrace();
        }

            }else if(jComboBox4.getSelectedItem().equals("Multimedia")) {
            
                DefaultTableModel dtm_m = (DefaultTableModel)  jTable3.getModel();
           dtm_m.setRowCount(0);
           try {
           
            ResultSet m_rs = Database.getData("select * from body_parts b,multimedia m where brand like '"+jTextField1.getText()+"%"+"' and m.bid = b.bid");
            while (m_rs.next()) {

                Vector vm = new Vector();
                vm.add(m_rs.getString(2));
                vm.add(m_rs.getString(3));
                vm.add(m_rs.getString(4));
                vm.add(m_rs.getString(5));
                vm.add(m_rs.getString(6));
                vm.add(m_rs.getString(10));
                vm.add(m_rs.getString(11));
                vm.add(m_rs.getString(7));
                
                dtm_m.addRow(vm);
            }
                
            } catch (Exception e) {
            e.printStackTrace();
        }
           

        } else if(jComboBox4.getSelectedItem().equals("Accessories")) {
        
             DefaultTableModel dtm_as = (DefaultTableModel)  jTable4.getModel();
           dtm_as.setRowCount(0);
           try {
           
            ResultSet ass_rs = Database.getData("select * from body_parts b,accessrices a where brand like '"+jTextField1.getText()+"%"+"' and a.bid = b.bid");
            while (ass_rs.next()) {

                Vector vass = new Vector();
                vass.add(ass_rs.getString(2));
                vass.add(ass_rs.getString(3));
                vass.add(ass_rs.getString(4));
                vass.add(ass_rs.getString(5));
                vass.add(ass_rs.getString(6));
                vass.add(ass_rs.getString(10));
                vass.add(ass_rs.getString(7));
                
                
                dtm_as.addRow(vass);
            }
                
            } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        }
         */

        if (jComboBox4.getSelectedItem().toString() == "AlloyWheel") {

            DefaultTableModel selAlloy_dtm = (DefaultTableModel) jTable2.getModel();
            selAlloy_dtm.setRowCount(0);

            try {
                ResultSet alloy_rs = Database.getData("select * from body_parts b, alloywheel a where b.bid = a.bid and b.brand like '" + jTextField1.getText() + "%" + "'");

                while (alloy_rs.next()) {
                    Vector alS_v = new Vector();

                    alS_v.add("AlloyWheel");
                    alS_v.add(alloy_rs.getString(2));//brand
                    alS_v.add(alloy_rs.getString(5));//model
                    alS_v.add(alloy_rs.getString(3));//modelNumber
                    alS_v.add(alloy_rs.getString(4));//colour
                    alS_v.add(alloy_rs.getString(6));//quantity
                    alS_v.add(alloy_rs.getString(7));//price

                    alS_v.add(alloy_rs.getString(12));//rimmaterial
                    alS_v.add(alloy_rs.getString(11));//size
                    alS_v.add("-----");//ampher
                    alS_v.add("-----");//hertz
                    alS_v.add("-----");//discription
                    alS_v.add(alloy_rs.getString(8));//cost_price
                    selAlloy_dtm.addRow(alS_v);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (jComboBox4.getSelectedItem().toString() == "Multimedia") {

            DefaultTableModel selMul_dtm = (DefaultTableModel) jTable2.getModel();
            selMul_dtm.setRowCount(0);

            try {
                ResultSet mull_rs = Database.getData("select * from body_parts b, multimedia a where b.bid = a.bid and b.brand like '" + jTextField1.getText() + "%" + "'");

                while (mull_rs.next()) {
                    Vector muS_v = new Vector();

                    muS_v.add("Multimedia");
                    muS_v.add(mull_rs.getString(2));//brand
                    muS_v.add(mull_rs.getString(5));//model
                    muS_v.add(mull_rs.getString(3));//modelNumber
                    muS_v.add(mull_rs.getString(4));//colour
                    muS_v.add(mull_rs.getString(6));//quantity
                    muS_v.add(mull_rs.getString(7));//price
                    muS_v.add("-----");//rimmaterial
                    muS_v.add("-----");//size
                    muS_v.add(mull_rs.getString(11));//ampher
                    muS_v.add(mull_rs.getString(12));//hertz
                    muS_v.add("-----");//discription
                    muS_v.add(mull_rs.getString(8));//cost price
                    selMul_dtm.addRow(muS_v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (jComboBox4.getSelectedItem().toString() == "Accessories") {

            DefaultTableModel selAcc_dtm = (DefaultTableModel) jTable2.getModel();
            selAcc_dtm.setRowCount(0);

            try {
                ResultSet acc_rs = Database.getData("select * from body_parts b, accessrices a where b.bid = a.bid and b.brand like '" + jTextField1.getText() + "%" + "'");

                while (acc_rs.next()) {
                    Vector accS_v = new Vector();

                    accS_v.add("Accessories");
                    accS_v.add(acc_rs.getString(2));//brand
                    accS_v.add(acc_rs.getString(5));//model
                    accS_v.add(acc_rs.getString(3));//modelNumber
                    accS_v.add(acc_rs.getString(4));//colour
                    accS_v.add(acc_rs.getString(6));//quantity
                    accS_v.add(acc_rs.getString(7));//price
                    accS_v.add("-----");//rimmaterial
                    accS_v.add("-----");//size
                    accS_v.add("-----");//ampher
                    accS_v.add("-----");//hertz
                    accS_v.add(acc_rs.getString(11));//discription
                    accS_v.add(acc_rs.getString(8));//cost price
                    selAcc_dtm.addRow(accS_v);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Plese select the type!");
        }


    }//GEN-LAST:event_jTextField1KeyReleased

    private void costPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costPriceActionPerformed

    }//GEN-LAST:event_costPriceActionPerformed

    private void costPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costPriceKeyReleased

        if (costPrice.getText().equalsIgnoreCase("")) {

        } else {

            try {
                String y = costPrice.getText();
                double mile = Double.valueOf(y);
                String c_p = costPrice.getText();
                jTextField5.setText(calculateBrandPrice(c_p.toString()).toString());

            } catch (NumberFormatException e) {

                JOptionPane.showMessageDialog(null, "invalide input!");
            }

        }
        String c_p = costPrice.getText();
        jTextField5.setText(calculateBrandPrice(c_p.toString()).toString());

        

    }//GEN-LAST:event_costPriceKeyReleased

    private void costPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costPriceKeyPressed

    }//GEN-LAST:event_costPriceKeyPressed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        /*       jComboBox4.addItem("AlloyWheel");
        jComboBox4.addItem("Multimedia");
        jComboBox4.addItem("Accessories");*/

        if (jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString().equalsIgnoreCase("AlloyWheel")) {
            jComboBox9.setEnabled(true);
            jComboBox6.setEnabled(true);

            jComboBox7.setEnabled(false);
            jComboBox8.setEnabled(false);
            jTextArea1.setEnabled(false);

        } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString().equalsIgnoreCase("Multimedia")) {

            jComboBox7.setEnabled(true);
            jComboBox8.setEnabled(true);

            jComboBox6.setEnabled(false);
            jComboBox9.setEnabled(false);
            jTextArea1.setEnabled(false);

        } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString().equalsIgnoreCase("Accessories")) {
            jTextArea1.setEnabled(true);

            jComboBox6.setEnabled(false);
            jComboBox7.setEnabled(false);
            jComboBox8.setEnabled(false);
            jComboBox9.setEnabled(false);

        }

        jTextField11.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());//type

        jTextField12.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());//brand
        jTextField13.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString());//model

        jTextField8.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString());//modNum
        jTextField2.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 4).toString());//colou

        jTextField4.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 5).toString());//quntity

        jTextField5.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString());//price

        jTextField9.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 7).toString());//rimmati
        jTextField3.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 8).toString());//size
        jTextField6.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 9).toString());//ampire
        jTextField7.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 10).toString());//hertz
        jTextArea1.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 11).toString());//discription
        costPrice.setText(jTable2.getValueAt(jTable2.getSelectedRow(), 12).toString());//cost price
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTextField8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyReleased
        
        if(simbleValidation(jTextField8.getText())==false){
        
            JOptionPane.showMessageDialog(null, "Invalide Input!");
        }
    }//GEN-LAST:event_jTextField8KeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jTextField8.setText("MNAC4399000");
        jTextField4.setText("6");
        jTextArea1.setText("ORIGINAL BRAND NEW CONDITION");
        costPrice.setText("50000");
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField costPrice;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void brandload() {

        try {
            ResultSet rs = Database.getData("select brandName from bodypartbrand");
            while (rs.next()) {
                jComboBox2.addItem(rs.getString("brandName"));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadType() {
        jComboBox1.addItem("AlloyWheel");
        jComboBox1.addItem("Multimedia");
        jComboBox1.addItem("Accessories");

    }

    private void SetEmpty() {

        jTextField6.setText(null);
        jTextField7.setText(null);
        jTextArea1.setText(null);
        jTextField3.setText(null);
        jTextField9.setText(null);
        jTextArea1.setText(null);
        jTextField3.setText(null);
        jTextField9.setText(null);
        jTextField6.setText(null);
        jTextField7.setText(null);
        jTextField2.setText(null);
        jTextField4.setText(null);
        jTextField8.setText(null);
        jTextField5.setText(null);

    }

    private void autoTableLoader() {

    }

    

    

   

    private void typecombo() {

        jComboBox4.addItem("AlloyWheel");
        jComboBox4.addItem("Multimedia");
        jComboBox4.addItem("Accessories");

        if (jComboBox4.getSelectedItem() == "Select Type") {
            jTextField1.setEnabled(false);
          
        }

    }

   

    private String calculateBrandPrice(String costPrice){
        /*
        double sellingPrice=0.0;
        
        
        
        if(costPrice <=100000){
        
            sellingPrice = costPrice + costPrice*(8/100);
           
            
        }else if(costPrice <= 300000){
        
            sellingPrice = costPrice + costPrice*(6/100);
            
            
        }else if(costPrice <= 700000){
        
            sellingPrice = costPrice + costPrice*(4/100);
           
        }else{
            sellingPrice = costPrice + costPrice*(2/100);
            
        }
        String s = String.valueOf(sellingPrice);
        long p = Integer.valueOf(s);
         */
        

        double price = Double.valueOf(costPrice);
        
        double sellingPrice =0.0;

        if(price <=100000.00){
        
            sellingPrice = price + (price*(8.00/100.00));
           
            
        }else if(price <= 300000.00){
        
            sellingPrice = price + (price*(6.00/100.00));
            
            
        }else if(price <= 700000.00){
        
            sellingPrice = price + (price*(4.00/100.00));
           
        }else{
            sellingPrice = price + (price*(2.00/100.00));
            
        }

        long p = (int) sellingPrice;
        return String.valueOf(p);

    }
    
    public boolean simbleValidation(String text){
    
        char invalidList[] = {'+','*','-','`','~','!','@','#','$','%','^','&','*','(',')','+','=','[',']','{','}',';',':','"',',','.','<','>','/','?'};
        int y = invalidList.length;
        
        
        char currentText[] = text.toCharArray();
        int x = currentText.length;
        
        for(int i=0;i<x;i++){
        
            for(int r=0;r<y;r++){
                
                if(currentText[i]==invalidList[r]){
                    return false;
                }
            }
        
            
        }
        return true;
    }
}
